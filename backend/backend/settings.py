"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY CONFIGURATION

# SECURITY WARNING: keep the secret key used in production secret!
#TODO:generate new key and .env
SECRET_KEY = 'django-insecure-c)g%$184o8z=mi-3!##hs5z8^=*b-u%m$_*m8al@de@y12^s3w'

# SECURITY WARNING: don't run with debug turned on in production!
#TODO: Debug false and changed allow host production
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# CSRF and Cookie Security Settings
CSRF_TRUSTED_ORIGINS = ['http://localhost:8082', 'http://localhost:8000/']
CSRF_COOKIE_NAME = 'csrftoken'
CSRF_COOKIE_HTTPONLY = False  # Make True in Production, could cause problems

# Only allow session cookies over HTTPS (recommended in production)
#TODO: changed all those settings
SESSION_COOKIE_SECURE = False  # set to true when using HTTPS

# Mark session cookies as HTTP-only, preventing JavaScript from accessing them
SESSION_COOKIE_HTTPONLY = True # True when in production

# Set the expiration for sessions (e.g., 1 day)
SESSION_COOKIE_AGE = 86400  # 1 day in seconds

# CSRF Protection on session-based requests
CSRF_COOKIE_SECURE = False #true for production with HTTPs

# Cross-site cookies
SESSION_COOKIE_SAMESITE = 'Lax'  # or 'None' if using cross-site requests

#so my website cant be imbedded in others
X_FRAME_OPTIONS = 'DENY'
SECURE_CONTENT_TYPE_NOSNIFF = True

# Enable HTTPS when ready (currently commented out for development)
# SECURE_SSL_REDIRECT = True  # Uncomment for HTTPS in production
# CSRF_COOKIE_SECURE = True  # Uncomment for HTTPS
# SESSION_COOKIE_SECURE = True  # Uncomment for HTTPS

# CORS Settings
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [
    'http://localhost:8082',
    'http://localhost:8000',
]
CORS_ALLOW_CREDENTIALS = True  # If you're using cookies for authentication

# SESSION CONFIGURATION

SESSION_COOKIE_DOMAIN = 'localhost'

# APPLICATION CONFIGURATION
SITE_ID = 1
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',  # for token-based authentication
    'app',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.microsoft',
    'django_extensions',
    'corsheaders',
    'dj_rest_auth',
    'django_ratelimit',

    #'sslserver',  # Uncomment if needed for SSL in development
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # This should come immediately after SecurityMiddleware
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',  # This should come before CsrfViewMiddleware for CORS to handle properly
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "allauth.account.middleware.AccountMiddleware",
    'django.middleware.csrf.CsrfViewMiddleware',
    'app.middleware.TokenCookieMiddleware',
    'app.middleware.TokenRefreshMiddleware',
    'django_ratelimit.middleware.RatelimitMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# AUTHENTICATION SETTINGS

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# LOGIN/LOGOUT Redirects
LOGIN_REDIRECT_URL = 'http://localhost:8082/'  
LOGOUT_REDIRECT_URL = 'http://localhost:8082/'  # Redirect to the home page after logout

# SOCIAL ACCOUNT SETTINGS
ACCOUNT_ADAPTER = 'app.adapters.NoSignupAdapter'
SOCIALACCOUNT_ADAPTER = 'app.adapters.MySocialAccountAdapter'
ACCOUNT_EMAIL_REQUIRED = False
ACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_USERNAME_REQUIRED = True
SOCIALACCOUNT_LOGIN_ON_GET = True

# Microsoft login
# CLIENT_ID, CLIENT_SECRET, AUTHORI#TY, and other related variables can go here.

ACCOUNT_RATE_LIMITS = {
    'login_failed': '5/5m'  # Example value, meaning 5 attempts per 5 minutes
}
# settings.py

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',  # Adjust if Redis is on a different host or port
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            # 'PASSWORD': 'your_redis_password',  # Uncomment if Redis requires authentication
        }
    },
}
RATELIMIT_ENABLE = True 
RATELIMIT_METHOD = ['GET', 'POST'] 
RATELIMIT_DEFAULT = '20/m' 
RATELIMIT_KEY = 'ip'
RATELIMIT_BLOCK = True
RATELIMIT_VIEW = 'app.views.rate_limit_exceeded'

# REST FRAMEWORK SETTINGS
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'dj_rest_auth.jwt_auth.JWTCookieAuthentication',
    ),
}

# DATABASE CONFIGURATION
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# PASSWORD VALIDATION
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# TIMEZONE & LANGUAGE SETTINGS
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# STATIC FILES
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'app', 'static'),
]

# DEFAULT PRIMARY KEY FIELD TYPE
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
