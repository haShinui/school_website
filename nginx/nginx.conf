# Global HTTP block for rate limiting
http {
    # Define rate limiting zone: limit requests from the same IP to 5 requests per second
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;

    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name fgz-fablab.ch www.fgz-fablab.ch;

        # Allow Let's Encrypt Certbot to perform domain validation
        location /.well-known/acme-challenge/ {
            root /var/www/html;  # Ensure this directory exists for Certbot challenges
        }

        # Redirect all other HTTP requests to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS Server Block with SSL and security headers
    server {
        listen 443 ssl;
        server_name fgz-fablab.ch www.fgz-fablab.ch;

        # SSL certificate files generated by Certbot
        ssl_certificate /etc/letsencrypt/live/fgz-fablab.ch/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/fgz-fablab.ch/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Security headers for added protection
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";

        # Proxy requests to the React frontend
        location / {
            proxy_pass http://react_frontend:3000;  # React frontend container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Apply rate limiting to API requests (Django backend)
        location /api/ {
            limit_req zone=mylimit burst=10 nodelay;  # Limit 5 req/sec with burst of 10
            proxy_pass http://django_backend:8000;  # Django backend container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve static files from Django
        location /static/ {
            alias /app/staticfiles/;  # Path to collected static files in the Docker container
        }

        # Optional media files handling (commented out for now, uncomment if needed)
        # location /media/ {
        #     alias /path/to/django/media/;  # Update with the actual path to media files
        # }

        # Custom error page handling
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
